"use strict";(self.webpackChunkcrypto_tracker=self.webpackChunkcrypto_tracker||[]).push([[7769],{8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var s=n(6540);const r={},a=s.createContext(r);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:t},e.children)}},9791:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"state-management","title":"State Management","description":"This document explains the state management approach used in CryptoTrackPro.","source":"@site/docs/state-management.md","sourceDirName":".","slug":"/state-management","permalink":"/CryptoTrackPro/docs/state-management","draft":false,"unlisted":false,"editUrl":"https://github.com/your-github-user/crypto-tracker/edit/main/docs-site/docs/state-management.md","tags":[],"version":"current","frontMatter":{"id":"state-management","title":"State Management","sidebar_label":"State Management"},"sidebar":"Sidebar","previous":{"title":"API Integration","permalink":"/CryptoTrackPro/docs/api-integration"},"next":{"title":"Authentication (Optional)","permalink":"/CryptoTrackPro/docs/authentication"}}');var r=n(4848),a=n(8453);const i={id:"state-management",title:"State Management",sidebar_label:"State Management"},o="State Management",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Zustand for Global State",id:"zustand-for-global-state",level:2},{value:"Auth Store Example",id:"auth-store-example",level:3},{value:"Theme Store Example",id:"theme-store-example",level:3},{value:"React Query for Server State",id:"react-query-for-server-state",level:2},{value:"Component-Level State",id:"component-level-state",level:2},{value:"Why This Approach?",id:"why-this-approach",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"state-management",children:"State Management"})}),"\n",(0,r.jsx)(t.p,{children:"This document explains the state management approach used in CryptoTrackPro."}),"\n",(0,r.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(t.p,{children:"The application uses a combination of state management solutions:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Zustand"}),": For global application state (auth, theme)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"React Query"}),": For server state and data fetching"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"React's useState/useEffect"}),": For component-level state"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"zustand-for-global-state",children:"Zustand for Global State"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://github.com/pmndrs/zustand",children:"Zustand"})," was chosen for global state management because it provides:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Simple and lightweight API"}),"\n",(0,r.jsx)(t.li,{children:"No boilerplate compared to Redux"}),"\n",(0,r.jsx)(t.li,{children:"TypeScript support"}),"\n",(0,r.jsx)(t.li,{children:"Built-in persistence"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"auth-store-example",children:"Auth Store Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"// From lib/store/auth-store.ts\nimport { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { toast } from 'react-toastify';\nimport { User } from '@/lib/types/schema';\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  isLoading: boolean;\n  isChecking: boolean;\n  error: string | null;\n  setUser: (user: User | null) => void;\n  setToken: (token: string | null) => void;\n  checkAuth: () => Promise<void>;\n  login: (email: string, password: string) => Promise<any>;\n  register: (name: string, email: string, password: string) => Promise<any>;\n  logout: () => Promise<void>;\n}\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set) => ({\n      user: null,\n      token: null,\n      isLoading: false,\n      isChecking: false,\n      error: null,\n      setUser: (user) => set({ user }),\n      setToken: (token) => set({ token }),\n      \n      checkAuth: async () => {\n        // Implementation...\n      },\n      \n      login: async (email, password) => {\n        // Implementation...\n      },\n      \n      register: async (name, email, password) => {\n        // Implementation...\n      },\n      \n      logout: async () => {\n        // Implementation...\n      },\n    }),\n    {\n      name: 'auth-storage',\n      partialize: (state) => ({\n        user: state.user,\n        token: state.token \n      })\n    }\n  )\n);\n"})}),"\n",(0,r.jsx)(t.h3,{id:"theme-store-example",children:"Theme Store Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'// From lib/store/theme.ts\nimport { create } from "zustand";\n\ninterface ThemeState {\n  isDark: boolean;\n  toggleTheme: () => void;\n}\n\nexport const useThemeStore = create<ThemeState>((set) => ({\n  isDark: false,\n  toggleTheme: () => set((state) => ({ isDark: !state.isDark })),\n}));\n'})}),"\n",(0,r.jsx)(t.h2,{id:"react-query-for-server-state",children:"React Query for Server State"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://tanstack.com/query/latest",children:"React Query"})," is used for managing server state because it provides:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Automatic caching"}),"\n",(0,r.jsx)(t.li,{children:"Refetching mechanisms"}),"\n",(0,r.jsx)(t.li,{children:"Loading and error states -> Better Error Handling"}),"\n",(0,r.jsx)(t.li,{children:"Pagination support"}),"\n",(0,r.jsx)(t.li,{children:"Devtools for debugging"}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"// From app/dashboard/page.tsx\nconst { \n  data, \n  isLoading, \n  isError, \n  error, \n  refetch, \n  isFetching,\n  dataUpdatedAt\n} = useQuery({\n  queryKey: ['cryptocurrencies'],\n  queryFn: fetchCryptocurrencies,\n  refetchInterval: 3000, // Auto-refresh every 3 seconds\n});\n"})}),"\n",(0,r.jsx)(t.h2,{id:"component-level-state",children:"Component-Level State"}),"\n",(0,r.jsx)(t.p,{children:"React's built-in state management (useState, useEffect) is used for component-specific state:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"// From app/dashboard/page.tsx\nconst [searchTerm, setSearchTerm] = useState('');\nconst debouncedSearchTerm = useDebounce(searchTerm, 500);\nconst [previousPrices, setPreviousPrices] = useState<Record<string, string>>({});\nconst [changedCryptos, setChangedCryptos] = useState<string[]>([]);\nconst [pricePulseMap, setPricePulseMap] = useState<Record<string, 'increase' | 'decrease' | null>>({});\nconst [page, setPage] = useState(1);\n"})}),"\n",(0,r.jsx)(t.h2,{id:"why-this-approach",children:"Why This Approach?"}),"\n",(0,r.jsx)(t.p,{children:"This combined approach was chosen because:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Separation of concerns"}),": Zustand manages application state, React Query handles server state"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Performance"}),": Each solution is optimized for its specific use case"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Developer experience"}),": Simple APIs and excellent TypeScript support"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Bundle size"}),": Both Zustand and React Query are lightweight"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Scalability"}),": This architecture scales well as the application grows"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);